// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql" / "sqlite" depending on your DB
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())

  carts   Cart[]
  orders  Order[]
}

model Cart {
  id        String    @id @default(uuid())
  sessionId String?
  userId    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user   User?   @relation(fields: [userId], references: [id])
  items  CartItem[]
  orders Order[]

  @@index([sessionId])
  @@unique([userId]) // one active cart per user
}

model CartItem {
  id        String   @id @default(uuid())
  cartId    String
  productId String
  variantId String
  quantity  Int
  unitPrice Float
  currency  String

  cart Cart @relation(fields: [cartId], references: [id])

  @@unique([cartId, variantId]) // enforce one variant per cart
}

model Order {
  id        String     @id @default(uuid())
  userId    String?
  cartId    String?
  status    String
  subtotal  Float
  tax       Float
  shipping  Float
  total     Float
  currency  String
  placedAt  DateTime   @default(now())

  user   User?   @relation(fields: [userId], references: [id])
  cart   Cart?   @relation(fields: [cartId], references: [id])
  items  OrderItem[]
  payment Payment? // 1:1 (strict) â€” see note below
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  variantId String
  quantity  Int
  unitPrice Float
  currency  String
  snapshot  Json

  order Order @relation(fields: [orderId], references: [id])
}

model Payment {
  id               String   @id @default(uuid())
  orderId          String   @unique
  provider         String
  providerIntentId String
  amount           Float
  currency         String
  status           String
  createdAt        DateTime @default(now())

  order Order @relation(fields: [orderId], references: [id])
}
